name: CI/CD Pipeline

on:
  push:
    branches:
      - '**'

jobs:
  tests:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        python-version: ['3.8', '3.9', '3.10']

    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_DB: test_db
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Wait for PostgreSQL to start
        run: |
          for i in {1..30}; do
            if pg_isready -h localhost -p 5432; then
              echo "PostgreSQL is ready"
              break
            fi
            echo "Waiting for PostgreSQL..."
            sleep 1
          done

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          pip install flake8
          pip install -r backend/requirements.txt

      - name: Run flake8
        run: flake8 backend/

      - name: Run backend tests
        working-directory: ./backend
        env:
          DB_NAME: test_db
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          DB_HOST: localhost
          DB_PORT: 5432
        run: python manage.py test

  build_and_push:
    if: github.ref == 'refs/heads/main'
    needs: tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Build and push backend image
        run: |
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/kittygram_backend:latest ./backend
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/kittygram_backend:latest

      - name: Build and push frontend image
        run: |
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/kittygram_frontend:latest ./frontend
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/kittygram_frontend:latest

      - name: Build and push gateway image
        run: |
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/kittygram_gateway:latest ./nginx
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/kittygram_gateway:latest

  deploy:
    if: github.ref == 'refs/heads/main'
    needs: build_and_push
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Copy files to server
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          source: "."
          target: "~/kittygram"
          rm: true

      - name: Create .env file on server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            cat > ~/kittygram/.env << 'EOF'
            ${{ secrets.ENV_FILE }}
            EOF

      - name: Deploy to server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            cd ~/kittygram
            docker-compose down
            docker-compose pull
            docker-compose up -d
            docker-compose exec -T backend python manage.py migrate
            docker-compose exec -T backend python manage.py collectstatic --noinput

      - name: Отправка уведомления в Телеграм
        uses: appleboy/telegram-action@master
        with:
          token: ${{ secrets.TELEGRAM_TOKEN }}
          to: ${{ secrets.TELEGRAM_CHAT_ID }}
          message: |
            Kittygram Р-А-Б-О-Т-А-Е-Т!
            ➡ Push by: ${{ github.actor }}
            ➡ Commit message: ${{ github.event.commits[0].message }}
            ➡ Commit: https://github.com/${{ github.repository }}/commit/${{ github.sha }}
