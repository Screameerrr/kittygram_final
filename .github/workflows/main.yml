name: CI/CD Pipeline

on:
  push:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Install backend dependencies
        run: |
          pip install flake8
          pip install -r backend/requirements.txt

      - name: Run flake8
        run: flake8 backend/

      - name: Run backend tests
        working-directory: ./backend
        run: python manage.py test

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '14'

      - name: Install frontend dependencies
        working-directory: ./frontend
        run: npm install

      - name: Run frontend tests
        working-directory: ./frontend
        run: npm test

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Build and push backend image
        run: |
          docker build -t screamerr/kittygram_backend:latest ./backend
          docker push screamerr/kittygram_backend:latest

      - name: Build and push frontend image
        run: |
          docker build -t screamerr/kittygram_frontend:latest ./frontend
          docker push screamerr/kittygram_frontend:latest

      - name: Build and push gateway image
        run: |
          docker build -t screamerr/kittygram_gateway:latest ./nginx
          docker push screamerr/kittygram_gateway:latest

  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Deploy to server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            cd ~/kittygram
            docker-compose down
            docker-compose pull
            docker-compose up -d
            docker-compose exec backend python manage.py migrate
            docker-compose exec backend python manage.py collectstatic --noinput

      - name: Send Telegram Notification
        uses: appleboy/telegram-action@master
        with:
          token: ${{ secrets.TELEGRAM_TOKEN }}
          chat_id: ${{ secrets.TELEGRAM_CHAT_ID }}
          message: 'Kittygram deployed successfully!'
